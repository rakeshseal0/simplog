{"version":3,"sources":["components/rowComponent.jsx","components/tableComponent.jsx","services/auth.js","components/navBar.jsx","components/lottieComponent.jsx","services/lottieOption.js","views/logView.jsx","views/infoView.jsx","services/validator.js","views/loginView.jsx","App.js","serviceWorker.js","index.js"],"names":["tableProperty1","overflow","textOverflow","RowComponent","props","console","log","value","id","timestamp","logText","_id","ip","style","className","onClick","onInfo","onDelete","TableComponent","render","logData","data","Table","striped","bordered","hover","responsive","map","dat","key","Component","isLoggedIn","localStorage","getItem","NavbarComponent","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","e","eventhandler","preventDefault","removeItem","history","push","logout","LottieComponent","animationData","height","width","undefined","options","loop","autoplay","rendererSettings","preserveAspectRatio","LogView","handleDelete","a","user","api_key","jwt","URL","config","API_URL","tmpStateLogData","state","newStateLogData","filter","d","setState","axios","delete","toast","error","handleInfo","handleRefresh","loading","jwt_token","username","get","slice","this","Fragment","length","loadingAnimationData","aria-hidden","InfoView","api","UsernameValidator","match","PasswordValidator","passw","LoginView","password","status","componentDidMount","logged","handleLogin","validated","params","post","resData","accessToken","setItem","new_user","handleInputChange","currentTarget","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","background","placeholder","onChange","event","href","role","App","exact","path","component","from","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.78efb11d.chunk.js","sourcesContent":["import React from \"react\";\nconst tableProperty1 = {\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n};\n\nconst RowComponent = (props) => {\n  console.log(props.value);\n  const { id, timestamp, logText, _id, ip } = props.value;\n  // const { handleDelete } = props.onDelete;\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{timestamp}</td>\n      <td>{ip}</td>\n      <td style={tableProperty1}>{logText}</td>\n      <td>\n        <button\n          className=\"btn btn-sm btn-secondary\"\n          onClick={() => props.onInfo(_id)}\n        >\n          Info\n        </button>\n      </td>\n      <td>\n        <button\n          className=\"btn btn-sm btn-danger\"\n          onClick={() => props.onDelete(_id)}\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default RowComponent;\n","import React, { Component } from \"react\";\nimport RowComponent from \"./rowComponent\";\nimport { Table } from \"react-bootstrap\";\n// import config from \"../config.json\";\n// import axios from \"axios\";\n\nclass TableComponent extends Component {\n  render = () => {\n    const { data: logData, onDelete, onInfo } = this.props;\n    return (\n      <Table striped bordered hover responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>timestamp</th>\n            <th>Incoming IP</th>\n            <th>LogData</th>\n            <th>Info</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {logData.map((dat) => (\n            <RowComponent\n              key={dat.id}\n              value={dat}\n              onDelete={onDelete}\n              onInfo={onInfo}\n            />\n          ))}\n        </tbody>\n      </Table>\n    );\n  };\n}\n\nexport default TableComponent;\n","export default function logout(eventhandler, props) {\n  eventhandler.preventDefault();\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"accesstoken\");\n  localStorage.removeItem(\"apikey\");\n  // console.log(props);\n  props.value.history.push(\"/\");\n}\n\nexport const isLoggedIn = () => {\n  const user = localStorage.getItem(\"user\");\n  return user !== null;\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logout, { isLoggedIn } from \"../services/auth\";\n\nconst NavbarComponent = (props) => {\n  return (\n    <nav className=\"navbar-expand navbar navbar-dark bg-info mb-2\">\n      <Link className=\"navbar-brand font-weight-bold\" to=\"/alldata\">\n        SimpLog\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <Link className=\"nav-link\" to=\"/info\">\n              Info <span className=\"sr-only\">(current)</span>\n            </Link>\n          </li>\n        </ul>\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item active \">\n            {isLoggedIn() === true ? (\n              <button\n                className=\"btn btn-sm btn-warning nav-item mt-1 ml-1\"\n                onClick={(e) => logout(e, props)}\n              >\n                logout\n              </button>\n            ) : (\n              <button\n                className=\"btn btn-sm btn-warning nav-item mt-1 ml-1\"\n                onClick={() => props.value.history.push(\"/login\")}\n              >\n                login\n              </button>\n            )}\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavbarComponent;\n","import React from \"react\";\nimport Lottie from \"react-lottie\";\nimport defaultOptions from \"../services/lottieOption\";\n\nconst LottieComponent = (props) => {\n  let { data, height, width } = props.value;\n  if (height === undefined) height = 400;\n  if (width === undefined) width = 400;\n  return (\n    <div>\n      <Lottie options={defaultOptions(data)} height={height} width={width} />\n    </div>\n  );\n};\n\nexport default LottieComponent;\n","export default function defaultOptions(animationData) {\n  return {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n}\n","import React, { Component } from \"react\";\nimport TableComponent from \"../components/tableComponent\";\nimport NavbarComponent from \"../components/navBar\";\nimport config from \"../config.json\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { isLoggedIn } from \"../services/auth\";\nimport animationData from \"../lotties/lottieFile.json\";\nimport loadingAnimationData from \"../lotties/loadingLottie.json\";\n\nimport LottieComponent from \"../components/lottieComponent\";\n\nclass LogView extends Component {\n  async componentDidMount() {\n    this.setState({ loading: true });\n    const jwt_token = localStorage.getItem(\"accesstoken\");\n    const username = localStorage.getItem(\"user\");\n\n    const { data } = await axios.get(\n      config.API_URL + \"/dump?user=\" + username + \"&jwt=\" + jwt_token\n    );\n\n    //got data from backend, validate data now\n    if (!username) {\n      this.props.history.push(\"/login\");\n    } else {\n      if (!data[0].username) {\n        this.props.history.push(\"/login\");\n      } else {\n        this.setState({\n          logData: data.slice(1),\n          username: data[0].username,\n          loading: false,\n        });\n      }\n    }\n  }\n\n  handleDelete = async (id) => {\n    const user = localStorage.getItem(\"user\");\n    const api_key = localStorage.getItem(\"api_key\");\n    const jwt = localStorage.getItem(\"accesstoken\");\n\n    const URL =\n      config.API_URL +\n      \"/delete?user=\" +\n      user +\n      \"&api=\" +\n      api_key +\n      \"&id=\" +\n      id +\n      \"&jwt=\" +\n      jwt;\n    console.log(URL);\n    const tmpStateLogData = this.state.logData;\n    try {\n      console.log(this.state.logData);\n      const newStateLogData = this.state.logData.filter((d) => d._id !== id);\n      console.log(newStateLogData);\n      this.setState({ logData: newStateLogData });\n      const { data } = await axios.delete(URL);\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n      toast.error(\"unable to delete\");\n      // console.log(tmpStateLogData);\n      this.setState({ logData: tmpStateLogData });\n    }\n  };\n\n  //handleInfo change\n  handleInfo = (id) => {\n    toast(\"This Feature will be updated \" + id);\n  };\n\n  //handle data refresh\n  handleRefresh = async () => {\n    this.setState({ loading: true });\n    const jwt_token = localStorage.getItem(\"accesstoken\");\n    const username = localStorage.getItem(\"user\");\n\n    const { data } = await axios.get(\n      config.API_URL + \"/dump?user=\" + username + \"&jwt=\" + jwt_token\n    );\n    console.log(\"new state\");\n    this.setState({\n      logData: data.slice(1),\n      username: data[0].username,\n      loading: false,\n    });\n  };\n\n  state = {\n    logData: [],\n    username: \"\",\n    loading: false,\n  };\n  render() {\n    isLoggedIn();\n    return (\n      <React.Fragment>\n        <React.Fragment>\n          <NavbarComponent value={this.props} />\n\n          {this.state.logData.length === 0 ? (\n            <div>\n              {this.state.loading === true ? (\n                <>\n                  <span className=\"badge badge-warning\">Loading...</span>\n                  <LottieComponent\n                    value={{\n                      data: loadingAnimationData,\n                      height: 400,\n                      width: 400,\n                    }}\n                  />\n                </>\n              ) : (\n                <div className=\"jumbotron jumbotron-fluid\">\n                  <button\n                    className=\"btn btn-sm btn-primary mr-1 float-right\"\n                    onClick={this.handleRefresh}\n                  >\n                    <i className=\"fa fa-refresh\" aria-hidden=\"true\"></i>\n                  </button>\n                  <div className=\"container  mb-0\">\n                    <h1 className=\"display-6\">welcome {this.state.username}</h1>\n                    <p className=\"lead  mb-0\">\n                      You dont have any logs, goto{\" \"}\n                      {\n                        <button\n                          className=\"btn btn-sm btn-info\"\n                          onClick={() => this.props.history.push(\"/info\")}\n                        >\n                          info\n                        </button>\n                      }{\" \"}\n                      for docs.\n                    </p>\n                  </div>\n                  <LottieComponent\n                    value={{ data: animationData, height: null, width: null }}\n                  />\n                </div>\n              )}\n            </div>\n          ) : (\n            <div>\n              <div className=\"row mr-0\">\n                <div className=\"col-sm-11 col-lg-11\">\n                  <p className=\"text-lowercase\">\n                    Showing logs for : {this.state.username}\n                  </p>\n                </div>\n                <div className=\"col-sm-1 col-lg-1\">\n                  <button\n                    className=\"btn btn-sm btn-primary float-right\"\n                    onClick={this.handleRefresh}\n                  >\n                    <i className=\"fa fa-refresh\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n              {this.state.loading === true ? (\n                <LottieComponent\n                  value={{\n                    data: loadingAnimationData,\n                    height: 400,\n                    width: 400,\n                  }}\n                />\n              ) : (\n                <TableComponent\n                  data={this.state.logData}\n                  onDelete={this.handleDelete}\n                  onInfo={this.handleInfo}\n                />\n              )}\n            </div>\n          )}\n        </React.Fragment>\n\n        <ToastContainer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LogView;\n","import React, { Component } from \"react\";\nimport NavbarComponent from \"../components/navBar\";\n\nclass InfoView extends Component {\n  componentDidMount() {\n    const api_key = localStorage.getItem(\"api_key\");\n    const user = localStorage.getItem(\"user\");\n    this.setState({ api: api_key, username: user });\n  }\n  state = {\n    api: \"<API_KEY>\",\n    username: \"<USER_NAME>\",\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <NavbarComponent value={this.props} />\n        <div className=\"jumbotron jumbotron-fluid mb-0 mt-0\">\n          <div className=\"container mb-5\">\n            <h1 className=\"display-3\">Docs</h1>\n            <p className=\"lead\">\n              This page consists of API keys and API_ENDPOINT documentations for\n              simplog.\n            </p>\n          </div>\n          <div className=\"container\">\n            <h4 className=\"font-weight-bold\">API KEY</h4>\n\n            <div className=\"bd-example mb-5\">\n              <code>{this.state.api}</code>\n            </div>\n            <h4 className=\"font-weight-bold\">Log Data</h4>\n            <div className=\"bd-example mb-5\">\n              <code>\n                simplog.herokuapp.com/log?user={this.state.username}&api=\n                {this.state.api}&text={\"<TEXT_TO_LOG>\"}\n              </code>\n            </div>\n            <h4 className=\"font-weight-bold\">Get All Data</h4>\n            <div className=\"bd-example mb-5\">\n              <code>simplog.herokuapp.com/dump?user={this.state.username}</code>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default InfoView;\n","export function UsernameValidator(user) {\n  var letters = /^[A-Za-z]+$/;\n  if (user.match(letters)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function PasswordValidator(passw) {\n  return passw.length > 6 ? true : false;\n}\n","import React, { Component } from \"react\";\nimport { UsernameValidator, PasswordValidator } from \"../services/validator\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport config from \"../config.json\";\nimport LottieComponent from \"../components/lottieComponent\";\nimport animationData from \"../lotties/homeLottie.json\";\nimport { isLoggedIn } from \"../services/auth\";\nclass LoginView extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    status: null,\n  };\n\n  componentDidMount = () => {\n    const logged = isLoggedIn();\n    if (logged) {\n      console.log(logged, \"user exists, sending to main view..\");\n      this.props.history.push(\"/alldata\");\n    }\n  };\n\n  handleLogin = async (e) => {\n    e.preventDefault();\n    const { username, password } = this.state;\n    let validated = true;\n    if (!UsernameValidator(username)) {\n      toast.error(\"only letter username\");\n      validated = false;\n    }\n    if (!PasswordValidator(password)) {\n      toast.error(\"password size must be > 6\");\n      validated = false;\n    }\n    if (validated) {\n      const params = { user: username, passw: password };\n      // let response = {};\n      try {\n        const { data: resData } = await axios.post(\n          config.API_URL + \"/login\",\n          params\n        );\n        if (resData.accessToken) {\n          //correct login details, store them in localstorage\n          console.log(\"logged In\");\n          localStorage.setItem(\"accesstoken\", resData.accessToken);\n          localStorage.setItem(\"user\", username);\n          localStorage.setItem(\"api_key\", resData.api);\n          if (resData.new_user) {\n            localStorage.setItem(\"newUser\", \"true\");\n          }\n          // console.log(this.props);\n          this.props.history.push(\"/allData\");\n        } else {\n          toast.error(resData);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n  handleInputChange = (e) => {\n    const { id, value: val } = e.currentTarget;\n    const name = id;\n    const value = val;\n    if (name === \"username\") {\n      this.setState({ username: value });\n    } else {\n      this.setState({ password: value });\n    }\n  };\n\n  render() {\n    // isLoggedIn\n    return (\n      <div>\n        <ToastContainer\n          position=\"top-left\"\n          autoClose={4000}\n          hideProgressBar={false}\n          closeOnClick={true}\n          pauseOnHover={true}\n        />\n        <div className=\"container-fluid m-0\">\n          <div className=\"row m-0\">\n            <div className=\"col-sm-3 col-md-6 col-lg-7\">\n              <div style={{ background: \"transparent\" }} className=\"jumbotron\">\n                <h1>Simplog</h1>\n                <p>\n                  A very simple and FREE REST-API to log data with interactive\n                  WEBUI\n                </p>\n\n                <button\n                  className=\"btn btn-sm btn-success\"\n                  onClick={() => this.props.history.push(\"/info\")}\n                >\n                  docs\n                </button>\n              </div>\n            </div>\n            <div className=\"col-sm-9 col-md-6 col-lg-5 float-left\">\n              <LottieComponent\n                value={{ data: animationData, height: 280, width: \"100%\" }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <form className=\"text-center border border-light p-5\">\n          <p>login with credentials or create a new account...</p>\n          {/* <!-- Email --> */}\n          <input\n            type=\"username\"\n            id=\"username\"\n            className=\"form-control mb-4\"\n            value={this.state.username}\n            placeholder=\"username\"\n            onChange={(event) => this.handleInputChange(event)}\n          />\n\n          {/* <!-- Password --> */}\n          <input\n            type=\"password\"\n            id=\"Password\"\n            className=\"form-control mb-4\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={(event) => this.handleInputChange(event)}\n          />\n\n          {/* <!-- Sign in button --> */}\n          <button\n            className=\"btn btn-info btn-block my-4\"\n            type=\"submit\"\n            onClick={(event) => this.handleLogin(event)}\n          >\n            Sign in\n          </button>\n\n          {/* <!-- Social login --> */}\n          <p>View it on</p>\n\n          <a\n            href=\"https://github.com/rakeshseal0\"\n            className=\"mx-2\"\n            role=\"button\"\n          >\n            <i className=\"fa fa-2x fa-github light-blue-text\"></i>\n          </a>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginView;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport LogView from \"./views/logView\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport InfoView from \"./views/infoView\";\nimport LoginView from \"./views/loginView\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {};\n  // handleLogin = (data) => {\n  //   const { api_key: api, username: user, auth: isAuth } = data;\n  //   this.setState({ api_key: api, username: user, auth: isAuth });\n  // };\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <Switch>\n            <Route exact path=\"/allData\" component={LogView} />\n            <Route exact path=\"/info\" component={InfoView} />\n            <Route exact path=\"/login\" component={LoginView} />\n            <Redirect from=\"/\" exact to=\"/alldata\" />\n            <Route path=\"/\" component={App} />\n          </Switch>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/jquery/dist/jquery.min.js\";\nimport \"../node_modules/jquery/dist/jquery.min.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}